xstar = rexp(B, rate=1/mean(birthw))
Tstar[i] = median(xstar)
}
sd(Tstar)
sd(replicate(1000,median(rexp(1000,rate=1/mean(birthw)))))
sd(bootstrap(birthw, median, B=1000))
sd(bootstrap(birthw, median, B=1000))
library(moments)
birthw = scan('birthweight.txt')
source('functions_Ch3.txt')
source('functions_Ch5.txt')
symplot(birthw)
qqlogis(birthw)
qqt(birthw,df=10)
qqlaplace(birthw)
qqcauchy(birthw)
qqchisq(birthw,df=9)
qqexp(birthw)
qqlnorm(birthw)
qqt(birthw,df=20)
qqline(birthw)
# relevant QQ-plots
par(mfrow=c(1,3))
qqlogis(birthw)
qqcauchy(birthw)
qqexp(birthw)
sd(bootstrap(birthw, median, B=1000))
# Parametric bootstrap estimate (part (b))
B = 1000
Tstar = numeric(B)
for(i in 1:B) {
xstar = rexp(B, rate=1/mean(birthw))
Tstar[i] = median(xstar)
}
sd(Tstar)
# One-line execution of part (c)
sd(replicate(1000, median(rexp(1000, rate=1/mean(birthw)))))
hist(zstar)
par(mfrow=c(1,1))
hist(zstar)
c(quantile(zstar,0.025), quantile(zstar,0.975))
c(quantile(zstar,0.45), quantile(zstar,0.55))
zstar = numeric(B)
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
hist(zstar)
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
hist(zstar)
c(quantile(zstar,0.025), quantile(zstar,0.975))
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
hist(zstar)
bs_PRRP = bootstrap(PRRP,mean,B=1000)
bs_PRRP_star = bs_PRRP - mean(bs_PRRP)
2*mean(bs_PRRP)-quantile(bs_PRRP,c(0.975,0.025))
hist(bs_PRRP_star)
bs_PRRP_med = bootstrap(PRRP,median,B=1000)
bs_PRRP_med_star = bs_PRRP_med - median(bs_PRRP_med)
2*median(bs_PRRP_med)-quantile(bs_PRRP_med,c(0.975,0.025))
hist(bs_PRRP_med_star)
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar = numeric(B)
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
hist(zstar)
hist(zstar)
hist(bs_PRRP_med_star)
2*mean(bs_PRRP)-quantile(bs_PRRP,c(0.975,0.025))
hist(bs_PRRP_star)
hist(bs_PRRP)
abline(v=51.67, col="red")
abline(v=71.15, col="red")
hist(bs_PRRP,main="Histogram of 1000 bootstrap samples of PRRP")
hist(bs_PRRP,
main="Histogram of 1000 bootstrap samples of PRRP",
xlab="Bootstrap samples of PRRP")
abline(v=51.67, col="red")
abline(v=71.15, col="red")
2*mean(bs_PRRP)-quantile(bs_PRRP,c(0.975,0.025))
interval_limits = 2*mean(bs_PRRP)-quantile(bs_PRRP,c(0.975,0.025))
interval_limits = 2*mean(bs_PRRP)-quantile(bs_PRRP,c(0.975,0.025))
hist(bs_PRRP,
main="Histogram of 1000 bootstrap samples of PRRP",
xlab="Bootstrap samples of PRRP")
abline(v=interval_limits[1], col="red")
abline(v=interval_limits[2], col="red")
abline(v=interval_limits[2],col="red",main="test")
abline(v=interval_limits[2],col="red",xlab="test")
hist(bs_PRRP_star)
interval_median = 2*median(bs_PRRP_med)-quantile(bs_PRRP_med,c(0.975,0.025))
hist(bs_PRRP,
main="Histogram of 1000 bootstrap samples of means of PRRP",
xlab="Bootstrap samples of means of PRRP")
abline(v=interval_mean[1],col="red")
abline(v=interval_mean[2],col="red")
interval_mean = 2*mean(bs_PRRP)-quantile(bs_PRRP,c(0.975,0.025))
hist(bs_PRRP,
main="Histogram of 1000 bootstrap samples of means of PRRP",
xlab="Bootstrap samples of means of PRRP")
abline(v=interval_mean[1],col="red")
abline(v=interval_mean[2],col="red")
interval_median = 2*median(bs_PRRP_med)-quantile(bs_PRRP_med,c(0.975,0.025))
hist(bs_PRRP,
main="Histogram of 1000 bootstrap samples of medians of PRRP",
xlab="Bootstrap samples of medians of PRRP")
abline(v=interval_median[1],col="red")
abline(v=interval_median[2],col="red")
# Histogram of means
hist(bs_PRRP,
main="Histogram of 1000 bootstrap samples of medians of PRRP",
xlab="Bootstrap samples of medians of PRRP")
abline(v=interval_median[1],col="red")
abline(v=interval_median[2],col="red")
# Histogram of means
hist(bs_PRRP_med,
main="Histogram of 1000 bootstrap samples of medians of PRRP",
xlab="Bootstrap samples of medians of PRRP")
abline(v=interval_median[1],col="red")
abline(v=interval_median[2],col="red")
hist(zstar)
c(quantile(zstar,0.025), quantile(zstar,0.975))
c(quantile(zstar,0.45), quantile(zstar,0.55))
c(quantile(zstar,0.40), quantile(zstar,0.60))
c(quantile(zstar,0.30), quantile(zstar,0.70))
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar = numeric(B)
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
hist(zstar
hist(zstar)
hist(zstar)
c(quantile(zstar,0.025), quantile(zstar,0.975))
c(quantile(zstar,0.30), quantile(zstar,0.70))
## Mean difference estimate
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar = numeric(B)
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
hist(zstar)
c(quantile(zstar,0.025), quantile(zstar,0.975))
hist(zstar)
c(quantile(zstar,0.025), quantile(zstar,0.975))
c(quantile(zstar,0.30), quantile(zstar,0.70))
## Mean difference estimate
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
hist(bs_SDRP_mean)
hist(bs_PRRP_mean)
## Mean difference estimate
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar = numeric(B)
for(i in 1:B) {
bs_SDRP_mean = bootstrap(SDRP,mean,B=1000)
bs_PRRP_mean = bootstrap(PRRP,mean,B=1000)
zstar[i] = (mean(bs_SDRP_mean) - mean(bs_PRRP_mean)) - (mean(SDRP) - mean(PRRP))
}
hist(zstar)
c(quantile(zstar,0.025), quantile(zstar,0.975))
c(quantile(zstar,0.30), quantile(zstar,0.70))
c(quantile(zstar,0.45), quantile(zstar,0.55))
ninefive = c(quantile(zstar,0.025), quantile(zstar,0.975))
ten = c(quantile(zstar,0.45), quantile(zstar,0.55))
# Histogram of mean difference and 10%-confidence interval
hist(zstar,
main="Histogram of 1000 bootstrap samples of medians of PRRP",
xlab="Bootstrap samples of medians of PRRP")
abline(v=ten[1],col="red")
abline(v=ten[2],col="red")
# Histogram of mean difference and 10%-confidence interval
hist(zstar,
main="Histogram of 1000 bootstrap samples of differences of means between SDRP and PRRP",
xlab="Bootstrap samples of medians of PRRP")
# Histogram of mean difference and 95%-confidence interval
hist(zstar,
main="Histogram of 1000 bootstrap samples of differences of means between SDRP and PRRP",
xlab="Bootstrap samples of differences of means")
abline(v=ninefive[1],col="red")
abline(v=ninefive[2],col="red")
# Histogram of mean difference and 10%-confidence interval
hist(zstar,
main="Histogram of 1000 bootstrap samples of differences of means between SDRP and PRRP",
xlab="Bootstrap samples of differences of means")
abline(v=ten[1],col="red")
abline(v=ten[2],col="red")
x <- rnorm(100, mean=3, sd=5)
y <- rnorm(100, mean=5, sd=11)
qqplot(x,y)
abline(a = mean(y) - mean(x) * sd(y) / sd(x), b = sd(y) / sd(x), col=2)
quart3.x <- quantile(p=0.75, x)
quart1.x <- quantile(p=0.25, x)
quart3.y <- quantile(p=0.75, y)
quart1.y <- quantile(p=0.25, y)
b <- (quart3.y - quart1.y) / (quart3.x - quart1.x)
abline(a=quart3.y - b*quart3.x,  b=b, col=8, lwd=1)
legend("bottomright", legend=c("abline method", "qqline method"), col=c(2,8), lty=c(1,1))
shapiro.test(x)
ks.test(x, pnorm, mean=0, sd=1)
ks.test(x, pnorm, mean=3, sd=5)
a = 0:20/20
breaks=qnorm(a, mean=0, sd=1)
chisquare(x,pnorm,0,0,0,breaks=breaks, mean=0, sd=1)
breaks=qnorm(a, mean=3, sd=5)
# the quantile function should match to the distribution under the null hypothesis!
chisquare(x,pnorm,0,0,0,breaks=breaks, mean=3, sd=5)
# Example of two normally distributed samples, the difference of which is NOT normally distributed:
w <- rnorm(100000)
hist(w)
z <- -sign(w)*abs(rnorm(100000))
hist(z)
hist(w - z)
x <- rnorm(100, mean=3, sd=5)
y <- rnorm(100, mean=5, sd=11)
qqplot(x,y)
abline(a = mean(y) - mean(x) * sd(y) / sd(x), b = sd(y) / sd(x), col=2)
quart3.x <- quantile(p=0.75, x)
quart1.x <- quantile(p=0.25, x)
quart3.y <- quantile(p=0.75, y)
quart1.y <- quantile(p=0.25, y)
b <- (quart3.y - quart1.y) / (quart3.x - quart1.x)
abline(a=quart3.y - b*quart3.x,  b=b, col=8, lwd=1)
legend("bottomright", legend=c("abline method", "qqline method"), col=c(2,8), lty=c(1,1))
shapiro.test(x)
ks.test(x, pnorm, mean=0, sd=1)
ks.test(x, pnorm, mean=3, sd=5)
a = 0:20/20
breaks=qnorm(a, mean=0, sd=1)
chisquare(x,pnorm,0,0,0,breaks=breaks, mean=0, sd=1)
breaks=qnorm(a, mean=3, sd=5)
# the quantile function should match to the distribution under the null hypothesis!
chisquare(x,pnorm,0,0,0,breaks=breaks, mean=3, sd=5)
# Example of two normally distributed samples, the difference of which is NOT normally distributed:
w <- rnorm(100000)
hist(w)
z <- -sign(w)*abs(rnorm(100000))
hist(z)
hist(w - z)
source('light.txt')
ks.test(light[[1]],qnorm,0,1)
hist(light[[1]])
ks.test(light[[2]],qnorm,0,1)
hist(light[[2]])
help(ks.test)
bootstrap(light[[1]], ks.test, B=1000,pnorm)
light
ks.test(light$1879,qnorm,mean(light[[1]]),1)
ks.test(light$'1879',qnorm,mean(light[[1]]),1)
ks.test(light[[1]],qnorm,mean(light[[1]]),1)
ks.test(light[[1]],qnorm,mean(light[[1]]),1)
mean(light[[1]])
var(light[[1]])
sd(light[[1]])
ks.test(light[[1]],qnorm,mean(light[[1]]),sd(light[[1]]))
help(ks.test)
ks.test(light[[1]],rnorm,mean(light[[1]]),sd(light[[1]]))
ks.test(light[[1]],rnorm,length(light[[1]]),mean(light[[1]]),sd(light[[1]]))
length(light[[1]])
rnorm(length(light[[1]]))
ks.test(light[[1]],rnorm,len,mu,sigma)
rnorm(len,mu,sigma)
len = length(light[[1]])
mu = mean(light[[1]])
sigma = sd(light[[1]])
ks.test(light[[1]],rnorm,len,mu,sigma)
rnorm(len,mu,sigma)
hist(rnorm(len,mu,sigma))
ks.test(light[[1]],rnorm,len,mu,sigma)
ks.test(light[[1]],qnorm,mu,sigma)
help(pnorm)
ks.test(light[[1]],pnorm,mu,sigma)
ks.test(light[[1]],pnorm,mu,sigma)$statistic
B = 1000
dstar = numeric(B)
B = 1000
dstar = numeric(B)
for(i in 1:B) {
dstar[i] = ks.test(light[[1]],pnorm,mu,sigma)
}
hist(dstar)
dstar
dstar[1]
dstar[i] = ks.test(light[[1]],pnorm,mu,sigma)$statistic
hist(dstar)
dstar[1]
B = 1000
dstar = numeric(B)
for(i in 1:B) {
dstar[i] = ks.test(light[[1]],pnorm,mu,sigma)$statistic
}
dstar[1]
hist(dstar)
ks.test(light[[1]],pnorm,mu,sigma)
dstar1 = numeric(B)
dstar2 = numeric(B)
B = 1000
dstar1 = numeric(B)
dstar2 = numeric(B)
for(i in 1:B) {
dstar1[i] = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic
dstar2[i] = ks.test(light[[2]],pnorm,mean(light[[2]]),sd(light[[2]]))$statistic
}
dstar1[1]
dstar1[10]
hist(dstar1)
pnorm(mean=mean(light[[1]]),sd=sd(light[[1]]))
help(pnorm)
for(i in 1:B) {
xstar1 = rnorm(B,mean(light[[1]]),sd(light[[1]]))
xstar2 = rnorm(B,mean(light[[2]]),sd(light[[2]]))
dstar1[i] = ks.test(light[[1]],xstar1)
dstar2[i] = ks.test(light[[2]],xstar2)
}
dstar1[10]
hist(dstar1)
for(i in 1:B) {
xstar1 = rnorm(B,mean(light[[1]]),sd(light[[1]]))
xstar2 = rnorm(B,mean(light[[2]]),sd(light[[2]]))
dstar1[i] = ks.test(light[[1]],xstar1)$statistic
dstar2[i] = ks.test(light[[2]],xstar2)$statistic
}
hist(dstar1)
dstar1[1]
hist(dstar1[1])
dstar1[[1]]
hist(dstar1[])
dstar1
for(i in 1:B) {
xstar1 = rnorm(B,mean(light[[1]]),sd(light[[1]]))
xstar2 = rnorm(B,mean(light[[2]]),sd(light[[2]]))
dstar1[i] = ks.test(light[[1]],xstar1)$statistic[1]
dstar2[i] = ks.test(light[[2]],xstar2)$statistic[1]
}
dstar1
help(ks.test)
dstar1[i] = ks.test(light[[1]],xstar1)$statistic
xstar1 = rnorm(B,mean(light[[1]]),sd(light[[1]]))
dstar1[i] = ks.test(light[[1]],xstar1)$statistic
test = ks.test(light[[1]],xstar1)$statistic
test
test[1] = ks.test(light[[1]],xstar1)$statistic
test=numeric(B)
test[1] = ks.test(light[[1]],xstar1)$statistic
test[1]
B = 1000
dstar1 = numeric(B)
dstar2 = numeric(B)
for(i in 1:B) {
xstar1 = rnorm(B,mean(light[[1]]),sd(light[[1]]))
xstar2 = rnorm(B,mean(light[[2]]),sd(light[[2]]))
dstar1[i] = ks.test(light[[1]],xstar1)$statistic
dstar2[i] = ks.test(light[[2]],xstar2)$statistic
}
dstar1
hist(dstar1)
hist(dstar2)
d1_observed = ks.test(light[[1]],rnorm(B,mean(light[[1]]),sd(light[[1]])))
d2_observed = ks.test(light[[2]],rnorm(B,mean(light[[2]]),sd(light[[2]])))
d1_observed = ks.test(light[[1]],rnorm(B,mean(light[[1]]),sd(light[[1]])))$statistic
d2_observed = ks.test(light[[2]],rnorm(B,mean(light[[2]]),sd(light[[2]])))$statistic
d1_observed = ks.test(light[[1]],pnorm(B,mean(light[[1]]),sd(light[[1]])))$statistic
d2_observed = ks.test(light[[2]],pnorm(B,mean(light[[2]]),sd(light[[2]])))$statistic
d1_observed = ks.test(light[[1]],rnorm(B,mean(light[[1]]),sd(light[[1]])))$statistic
d2_observed = ks.test(light[[2]],rnorm(B,mean(light[[2]]),sd(light[[2]])))$statistic
d1_observed = ks.test(light[[1]],qnorm(mean(light[[1]]),sd(light[[1]])))$statistic
d2_observed = ks.test(light[[2]],qnorm(mean(light[[2]]),sd(light[[2]])))$statistic
d1_observed = ks.test(light[[1]],qnorm(mean(light[[1]]),sd(light[[1]])))$statistic
help(qnorm)
d1_observed = ks.test(light[[1]],pnorm(mean(light[[1]]),sd(light[[1]])))$statistic
d2_observed = ks.test(light[[2]],pnorm(mean(light[[2]]),sd(light[[2]])))$statistic
d1_observed = ks.test(light[[1]],pnorm,par=c(mean(light[[1]]),sd(light[[1]])))$statistic
help(ks.test)
d1_observed = ks.test(light[[1]],pnorm,c(mean(light[[1]]),sd(light[[1]])))$statistic
d1_observed = ks.test(light[[1]],pnorm,c(mean(light[[1]]),sd(light[[1]])))$statistic
d1_observed = ks.test(light[[1]],pnorm,c(mean(light[[1]]),sd(light[[1]])))$statistic
d1_observed = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic
d1_observed = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic
d2_observed = ks.test(light[[2]],pnorm,mean(light[[2]]),sd(light[[2]]))$statistic
d2_observed = ks.test(light[[2]],pnorm,mean(light[[2]]),sd(light[[2]]))$statistic
d2_observed = ks.test(light[[2]],pnorm,mean(light[[2]]),sd(light[[2]]))$statistic
d2_observed = ks.test(light[[2]],pnorm,mean(light[[2]]),sd(light[[2]]))$statistic
ks.test(light[[1]],pnorm,mu,sigma)
ks.test(light[[1]],rnorm,mean(light[[1]]),sd(light[[1]]))
ks.test(light[[2]],rnorm,mean(light[[2]]),sd(light[[2]]))
ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))
ks.test(light[[2]],pnorm,mean(light[[2]]),sd(light[[2]]))
help(qnorm)
help(quantile)
# ks.test values of D
ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))
p1 = min(sum(dstar1>=d1_observed)/B)
p1
p2 = min(sum(dstar2>=d2_observed)/B)
p2
ks1 = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))
ks2 = ks.test(light[[2]],pnorm,mean(light[[2]]),sd(light[[2]]))
# Observed values of the KS-test statistic D_n
d1_observed = ks1$statistic
d2_observed = ks2$statistic
ks1
ks2
# KS-test p-values
p1_ks = ks1$p.value
p2_ks = ks2$p.value
p1_ks
p1
p2_ks
p2
# Histograms of bootstrap estimates of D_n
hist(dstar1)
hist(dstar2)
abline(v=d1_observed)
# Histograms of bootstrap estimates of D_n
hist(dstar1)
abline(v=d1_observed,col="red")
hist(dstar2)
abline(v=d2_observed,col="red")
# Histograms of bootstrap estimates of D_n with the observed values of D_n
hist(dstar1,
main="Histogram of bootstrap estimates of D_n with the observed values of D_n")
# Histograms of bootstrap estimates of D_n with the observed values of D_n
hist(dstar1,
main="Histogram of bootstrap estimates of D_n with the observed values of D_n",
xlab="Bootstrap estimates of D_n")
abline(v=d1_observed,col="red")
hist(dstar2,
main="Histogram of bootstrap estimates of D_n for 1882 with the observed values of D_n",
xlab="Bootstrap estimates of D_n")
# Histograms of bootstrap estimates of D_n with the observed values of D_n
hist(dstar1,
main="Histogram of bootstrap estimates of D_n for 1879 with the observed values of D_n",
xlab="Bootstrap estimates of D_n")
abline(v=d1_observed,col="red")
hist(dstar2,
main="Histogram of bootstrap estimates of D_n for 1882 with the observed values of D_n",
xlab="Bootstrap estimates of D_n")
abline(v=d2_observed,col="red")
hist(dstar1)
dstar1bad = numeric(B)
for(i in 1:B) {
dstar1bad[i] = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))
}
hist(dstar1bad)
dstar1bad[i] = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic
for(i in 1:B) {
dstar1bad[i] = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic
}
hist(dstar1bad)
ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic
test = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic
test
test[1]
test[[1]]
test = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic[[1]]
test
dstar1bad = numeric(B)
for(i in 1:B) {
dstar1bad[i] = ks.test(light[[1]],pnorm,mean(light[[1]]),sd(light[[1]]))$statistic[[1]]
}
hist(dstar1bad)
source('C:/Users/leonl/Desktop/SDA/Assignment 4/Assignment4.R')
