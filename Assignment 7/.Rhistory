y <- rexp(n, rate=r)
exp(3, 1)
hist(exp(1,1))
?exp
hist(exp_fun(1,1))
hist(rexp(1,1))
plot(rexp(1,1))
plot(rexp(10,1))
plot(rexp(20,1))
plot(hist(20,1))
hist(rexp(20,1))
hist(rexp(200,1))
hist(rexp(2000,1))
hist(rexp(20000,1))
hist(rexp(200000,1))
hist(rexp(200000,2))
plot(rexp(200000,2))
plot(rexp(2000,2))
y = rexp(2000, 2)
hist(y)
x = 1:2000
y = rexp(x, 2)
hist(y)
plot(y)
hist(y)
hist(y, freq = TRUE)
hist(y, freq = FALSE)
x = 1:2000
y = rexp(x, 2)
hist(y, freq = FALSE)
hist(y, freq = TRUE)
x = 1:2000
y = rexp(x, 2)
hist(y, freq = TRUE)
x = 1:2000
y = rexp(x, 2)
hist(y, freq = TRUE)
x = 1:2000
y = rexp(x, 2)
hist(y, freq = FALSE)
x = 1:2000
y = rexp(x, 5)
hist(y, freq = FALSE)
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE)
hist(y, freq = FALSE, ylim = 1)
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE, ylim = 1)
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE, ylim = [0,1])
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE, ylim = c(0,1))
plot(pexp(x,y))
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE, ylim = c(0,1))
plot(pexp(x,y))
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE, ylim = c(0,1))
#plot(pexp(x,y))
plot(dexp(x,y))
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE, ylim = c(0,1))
plot(dexp(x,y))
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE, ylim = c(0,1))
#plot(dexp(x,y))
x = 1:2000
y = rexp(x, 1)
hist(y, freq = FALSE, ylim = c(0,1))
plot(x, dexp(x))
#hist(y, freq = FALSE, ylim = c(0,1))
plot(x, dexp(x))
x = 1:2000
y = rexp(x, 1)
#hist(y, freq = FALSE, ylim = c(0,1))
plot(x, dexp(x))
#hist(y, freq = FALSE, ylim = c(0,1))
plot(x, dexp(1:10))
x = 1:2000
y = rexp(x, 1)
#hist(y, freq = FALSE, ylim = c(0,1))
plot(x, dexp(1:10))
x = 1:2000
y = rexp(x, 1)
#hist(y, freq = FALSE, ylim = c(0,1))
plot(1:10, dexp(1:10))
x = 1:2000
y = rexp(x, 1)
#hist(y, freq = FALSE, ylim = c(0,1))
plot(1:10, dexp(1:10))
plot(x,y)
hist(x,y)
hist(y)
hist(y, freq = FALSE, ylim = c(0,1))
plot(x, dexp(x,1))
hist(y, freq = FALSE, ylim = c(0,1))
plot(x, dexp(x,1))
hist(y, freq = FALSE, ylim = c(0,1))
plot(x, pexp(x,1))
plot(x, nexp(x,1))
plot(x, f(x,1))
f <- function(x,rate){rate*exp(-rate*x)}
plot(x, f(x,1))
x = 1:2000
y = rexp(x, 1)
#hist(y, freq = FALSE, ylim = c(0,1))
plot(1:10, dexp(1:10))
hist(y, freq = FALSE, ylim = c(0,1))
f <- function(x,rate){rate*exp(-rate*x)}
plot(x, f(x,1))
plot(x, f(x,1))
df = read.table("owid-covid-data.csv", sep=";",
header = TRUE, stringsAsFactors = FALSE)
df$date = as.Date(df$date, "%d-%m-%y")
dec = subset(df, df$date == as.Date("20-12-2020", "%d-%m-%y") &
df$continent == "Europe",
select = c(iso_code, new_cases_smoothed_per_million))
jan = subset(df, df$date == as.Date("20-01-2021", "%d-%m-%y") &
df$continent == "Europe",
select = c(iso_code, new_cases_smoothed_per_million))
dec$new_cases_smoothed_per_million =
as.numeric(gsub(",", ".", dec$new_cases_smoothed_per_million))
jan$new_cases_smoothed_per_million =
as.numeric(gsub(",", ".", jan$new_cases_smoothed_per_million))
dec_cases = dec$new_cases_smoothed_per_million
jan_cases = jan$new_cases_smoothed_per_million
summary(dec_cases)
sd(dec_cases)
summary(jan_cases)
sd(jan_cases)
par(mfrow=c(1,2))
plot(sort(dec_cases), main="Plot of sorted dec_cases vs. countries",
xlab="Sorted index of country", ylab="dec_cases")
plot(sort(jan_cases), main="Plot of sorted jan_cases vs. countries",
xlab="Sorted index of country", ylab="jan_cases")
hist(dec_cases, ylim=c(0,25))
hist(jan_cases, ylim=c(0,25))
boxplot(dec_cases, main="Boxplot of dec_cases", ylab="dec_cases", ylim=c(0,1050))
boxplot(jan_cases, main="Boxplot of jan_cases", ylab="jan_cases", ylim=c(0,1050))
par(mfrow=c(1,1))
plot(dec_cases, jan_cases)
cor(dec_cases, jan_cases)
cor(dec_cases, jan_cases, method="spearman")
cor(dec_cases, jan_cases, method="kendall")
print("Hello, World!")
# Set the CRAN mirror:
local({r <- getOption("repos")
r["CRAN"] <- "https://cran.rstudio.com/"
options(repos = r)})
# Install the packages used in this tutorial:
packages <- c("C50", "ggplot2", "gmodels", "rsample", "skimr")
for (i in packages) {
if(!require(i, character.only = TRUE)) {
install.packages(i, dependencies = TRUE)
}
}
# Loading packages
library(C50)
library(ggplot2)
library(gmodels)
library(rsample)
library(skimr)
# Set the working directory
setwd("TYPE YOUR WORKING DIRECTORY HERE. USE / instead of \") # specify the working directory
# Read the data
tree_credit <- read.csv("tree_credit.csv")
setwd("C:/Users/leonl/Desktop/SDA_git/Assignment 7")
source('C:/Users/leonl/Desktop/SDA_git/Assignment 7/Assignment7.R', echo=TRUE)
plot(wind, oxidant)
plot(temperature, oxidant)
plot(wind, oxidant)
summary(lm(oxidant~wind+temperature-1))
summary(lm(oxidant~wind+temperature))
pairs(cbind(wind, temperature, humidity, insolation))
plot(wind, oxidant)
plot(temperature, oxidant)
attach(expenses)
pairs(cbind(bad, crime, lawyers, employ, pop))
pairs(cbind(bad, crime, lawyers, employ, pop))
# step-up method
summary(lm(expend~bad))
summary(lm(expend~crime))
summary(lm(expend~lawyers))
summary(lm(expend~employ))
summary(lm(expend~pop))
summary(lm(expend~employ))
summary(lm(expend~employ+bad))
summary(lm(expend~employ))  # highest R^2
summary(lm(expend~employ+bad))
summary(lm(expend~employ+crime))
summary(lm(expend~employ+lawyers))
summary(lm(expend~employ+pop))
summary(lm(expend~employ+lawyers))  # highest R^2
summary(lm(expend~employ+lawyers+bad))
summary(lm(expend~employ+lawyers+crime))
summary(lm(expend~employ+lawyers+pop))
summary(lm(expend~employ+lawyers))  # highest R^2
summary(lm(expend~employ+lawyers+bad))
summary(lm(expend~employ+lawyers+crime))
summary(lm(expend~employ+lawyers+pop))
summary(lm(expend~employ+lawyers+bad))
stepup_lm = lm(expend~employ+lawyers)
crime_stepup_lm = lm(expend~employ+lawyers)
summary(lm(expend~bad+crime+lawyers+emply+pop))
summary(lm(expend~bad+crime+lawyers+employ+pop))
summary(lm(expend~bad+lawyers+employ+pop))
summary(lm(expend~bad+lawyers+employ))
summary(lm(expend~bad+lawyers+employ))
summary(lm(expend~bad+crime+lawyers+employ+pop))
summary(lm(expend~bad+lawyers+employ+pop))
summary(lm(expend~bad+lawyers+employ))
summary(lm(expend~lawyers+employ))
crime_lm = lm(expend~employ+lawyers)
source('C:/Users/leonl/Desktop/SDA_git/Assignment 7/Assignment7.R', echo=TRUE)
plot(employ, expend)
plot(lawyers, expend)
plot(bad, expend)
plot(crime, expend)
plot(pop, expend)
plot(employ, lawyers)
plot(bad, expend)
par(mfrow=c(2,2))
plot(bad, expend)
plot(crime, expend)
plot(lawyers, expend)
plot(employ, expend)
par(mfrow=c(1,2))
plot(bad, expend)
plot(crime, expend)
plot(lawyers, expend)
plot(employ, expend)
plot(pop, expend)
par(mfrow=c(1,2))
plot(bad, expend)
plot(crime, expend)
par(mfrow=c(1,2))
plot(bad, expend)
plot(lawyers, expend)
plot(employ, expend)
plot(pop, expend)
par(mfrow=c(1,1))
plot(crime, expend)
plot(bad, expend)
pairs(cbind(bad, crime, lawyers, employ, pop))
# step-up method
summary(lm(expend~bad))
# step-up method
summary(lm(expend~bad))
summary(lm(expend~crime))
summary(lm(expend~lawyers))
summary(lm(expend~employ))  # highest R^2
summary(lm(expend~pop))
summary(lm(expend~employ+bad))
summary(lm(expend~employ+crime))
summary(lm(expend~employ+lawyers))  # highest R^2
summary(lm(expend~employ+pop))
summary(lm(expend~pop))
summary(lm(expend~employ+lawyers+bad))  # highest R^2, 'bad' not significant
summary(lm(expend~employ+lawyers+crime))
summary(lm(expend~employ+lawyers+pop))
summary(lm(expend~employ+lawyers+bad))  # highest R^2, 'bad' not significant
crime_lm = lm(expend~employ+lawyers)
lm
source('C:/Users/leonl/Desktop/SDA_git/Assignment 7/Assignment7.R', echo=TRUE)
getwd()
plot(observer1lm$residuals, photo)
plot(observer2lm$residuals, photo)
plot(observer1lm$residuals, photo)
plot(observer2lm$residuals, photo)
abline(v=0)
plot(observer1lm$residuals, photo)
abline(v=0)
plot(observer2lm$residuals, photo)
abline(v=0)
par(mfrow=c(2,1))
plot(observer1lm$residuals, photo)
abline(v=0)
plot(observer2lm$residuals, photo)
abline(v=0)
help(par)
help(par(mfrow))
help(mfrow)
par(mfrow=c(2,1))
help(mfrow)
plot(observer1lm$residuals, photo)
abline(v=0)
plot(observer2lm$residuals, photo)
abline(v=0)
par(mfrow=c(1,2))
help(mfrow)
plot(observer1lm$residuals, photo)
abline(v=0)
plot(observer2lm$residuals, photo)
abline(v=0)
plot(observer1lm$residuals, photo,
xlab="Residuals of observer 1")
abline(v=0)
plot(observer2lm$residuals, photo
xlab="Residuals of observer 2")
plot(observer2lm$residuals, photo,
xlab="Residuals of observer 2")
plot(observer2lm$residuals, photo,
xlab="Residuals of observer 2")
abline(v=0)
plot(observer1lm$residuals, photo,
xlab="Residuals of observer 1")
par(mfrow=c(1,2))
plot(observer1lm$residuals, photo,
xlab="Residuals of observer 1")
abline(v=0)
plot(observer2lm$residuals, photo,
xlab="Residuals of observer 2")
abline(v=0)
plot(observer1lm$residuals, photo,
xlab='Residuals of observer 1',
ylab='Number of geese in photos')
abline(v=0)
plot(observer2lm$residuals, photo,
xlab='Residuals of observer 2',
ylab='Number of geese in photos')
abline(v=0)
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', outer = TRUE, cex = 1.5)
par(mfrow=c(1,2))
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', outer = TRUE, cex = 1.5)
mtext('Number of observed vs. photographed geese')
mtext('Number of observed vs. photographed geese', outer=True)
mtext('Number of observed vs. photographed geese', outer=TRUE)
help(mtext)
mtext('Number of observed vs. photographed geese', side=3, line=-21 outer=TRUE)
par(mfrow=c(1,2))
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', side=3, line=-21, outer=TRUE)
mtext('Number of observed vs. photographed geese', side=3, line=3, outer=TRUE)
mtext('Number of observed vs. photographed geese', side=3, line=3, outer=TRUE)
par(mfrow=c(1,2))
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', side=3, line=3, outer=TRUE)
par(mfrow=c(1,2))
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', side=3, line=-5, outer=TRUE)
mtext('Number of observed vs. photographed geese', side=3, line=0, outer=TRUE)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', side=3, line=0, outer=TRUE)
help(mtext)
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', side=3, line=0, outer=TRUE)
par(mfrow=c(1,2))
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', side=3, line=0, outer=TRUE)
par(mfrow=c(1,2))
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', side=3, line=-1, outer=TRUE)
par(mfrow=c(1,2))
plot(observer1,photo)
plot(observer2,photo)
mtext('Number of observed vs. photographed geese', side=3, line=-3, outer=TRUE)
help(mtext)
par(mfrow=c(1,2))
plot(observer1,photo,
xlab='Observer 1 geese',
ylab='Photographed geese')
plot(observer2,photo,
xlab='Observer 2 geese',
ylab='Photographed geese')
mtext('Number of observed vs. photographed geese',
side=3, line=-3, outer=TRUE)
help(mtext)
observer1lm = lm(observer1~photo, data=geese)
observer2lm = lm(observer2~photo, data=geese)
summary(lm(observer1~photo, data=geese))
summary(lm(observer2~photo-1, data=geese))
summary(observer1lm)
help(lm)
plot(observer1,photo,
xlab='Observer 1 count',
ylab='Photo count')
plot(observer2,photo,
xlab='Observer 2 count',
ylab='Photo count')
mtext('Number of observed vs. photographed geese',
side=3, line=-3, outer=TRUE)
observer1lm = lm(observer1~photo, data=geese)
observer2lm = lm(observer2~photo, data=geese)
summary(lm(observer1~photo, data=geese))
summary(lm(observer2~photo, data=geese))
observer1lm = lm(observer1~photo)
observer2lm = lm(observer2~photo)
summary(observer1lm)
summary(observer2lm)
summary(observer1lm)
summary(observer2lm)
summary(observer1lm)
summary(observer2lm)
observer1lm = lm(photo~observer1)
summary(observer1lm)
summary(observer1lm)
observer1lm = lm(photo~observer1)
summary(observer1lm)
observer1lm = lm(photo~observer1)
observer2lm = lm(photo~observer2)
summary(observer1lm)
summary(observer2lm)
summary(observer1lm)
summary(observer2lm)
summary(observer1lm)
summary(observer2lm)
plot(photo, observer1lm$residuals,
xlab='Residuals of observer 1',
ylab='Number of geese in photos')
abline(h=0)
plot(photo, observer2lm$residuals,
xlab='Residuals of observer 2',
ylab='Number of geese in photos')
abline(h=0)
lm.norm.test(observer1,photo)
ks.test(lm.norm.test(observer1,photo))
lm.norm.test(observer1,photo)
ks.test(lm.norm.test(observer1,photo), pnorm)
logphoto = log(photo)
par(mfrow=c(1,2))
plot(observer1,logphoto,
xlab='Observer 1 count',
ylab='Photo count')
plot(observer2,logphoto,
xlab='Observer 2 count',
ylab='Photo count')
logobs1 = log(observer1)
logobs2 = log(observer2)
par(mfrow=c(1,2))
plot(logobs1,logphoto,
xlab='Observer 1 count',
ylab='Photo count')
plot(logobs2,logphoto,
xlab='Observer 2 count',
ylab='Photo count')
loglm1 = lm(logphoto~logobs1)
loglm2 = lm(logphoto~logobs2)
summary(loglm1)
summary(loglm2)
summary(observer1lm)
summary(observer2lm)
qqnorm(loglm1$residuals)
qqnorm(loglm2$residuals)
pairs(cbind(wind, temperature, humidity, insolation))
pairs(cbind(oxidant, wind, temperature, humidity, insolation))
source('C:/Users/leonl/Desktop/SDA_git/Assignment 7/Assignment7.R', echo=TRUE)
par(mfrow=c(1,2))
plot(logobs1,logphoto,
xlab='Observer 1 count',
ylab='Photo count')
plot(logobs2,logphoto,
xlab='Observer 2 count',
ylab='Photo count')
mtext('Number of observed vs. photographed geese',
side=3, line=-3, outer=TRUE)
par(mfrow=c(1,2))
plot(logobs1,logphoto,
xlab='Observer 1 count',
ylab='Photo count')
plot(logobs2,logphoto,
xlab='Observer 2 count',
ylab='Photo count')
mtext('Log of number of observed vs. log of photographed geese',
side=3, line=-3, outer=TRUE)
par(mfrow=c(1,2))
plot(logobs1,logphoto,
xlab='Log observer 1 count',
ylab='Log photo count')
plot(logobs2,logphoto,
xlab='Log observer 2 count',
ylab='Log photo count')
mtext('Log of number of observed vs. log of photographed geese',
side=3, line=-3, outer=TRUE)
summary(observer1lm)
summary(observer2lm)
summary(loglm1)
summary(loglm2)
summary(loglm1)
summary(loglm2)
par(mfrow=c(1,2))
plot(loglm1$residuals, logphoto,
xlab='Residuals of log(observer1)',
ylab='Log of number of geese in photos')
abline(v=0)
plot(loglm2$residuals, logphoto,
xlab='Residuals of log(observer2)',
ylab='Log of number of geese in photos')
abline(v=0)
qqnorm(loglm1$residuals)
qqnorm(loglm2$residuals)
qqnorm(loglm1$residuals, main='Normal QQ-plot - Observer 1 residuals')
qqnorm(loglm2$residuals, main='Normal QQ-plot - Observer 1 residuals')
qqnorm(loglm1$residuals, main='Normal QQ-plot - Observer 1 residuals')
qqnorm(loglm2$residuals, main='Normal QQ-plot - Observer 2 residuals')
